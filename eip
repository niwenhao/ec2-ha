#!/bin/sh
#
#
#	Resource Agent for AWS EC2 EIP
#
# Copyright (c) 2014 mooapp All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs

#######################################################################

meta_data() {
	cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="eip" version="0.9">
<version>1.0</version>

<longdesc lang="en">
This is a Resource Agent for AWS EC2 EIP (Elastic IP Address). 
</longdesc>
<shortdesc lang="en">AWS EC2 EIP resource agent</shortdesc>

<parameters>
<parameter name="elastic_ip" required="1">
<longdesc lang="en">
The Elastic IP address
</longdesc>
<shortdesc lang="en">EIP</shortdesc>
<content type="string" />
</parameter>

</parameters>

<actions>
<action name="start"        timeout="20" />
<action name="stop"         timeout="20" />
<action name="monitor"      timeout="20" interval="10" depth="0" />
<action name="meta-data"    timeout="5" />
<action name="validate-all"   timeout="20" />
</actions>
</resource-agent>
END
}

#######################################################################

MY_PID=$$
SELF_DESC_FILE=/tmp/${MY_PID}_selfinst.json
CURR_DESC_FILE=/tmp/${MY_PID}_currinst.json

eip_usage() {
	cat <<END
usage: $0 {start|stop|monitor|validate-all|meta-data}

Expects to have a fully populated OCF RA-compliant environment set.
END
}

eip_start() {
    curl http://`hostname`:8983/solr/ > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        return $OCF_NOT_RUNNING
    fi
    /usr/bin/aws ec2 describe-instances --filter "Name=tag:hostname,Values=`hostname`" > $SELF_DESC_FILE 2>/dev/null || return $OCF_NOT_RUNNING
    SELF_INST_ID=$(ruby -e 'require "json"; print JSON.load(STDIN)["Reservations"][0]["Instances"][0]["InstanceId"]' < ${SELF_DESC_FILE})
    SELF_IF_ID=$(ruby -e 'require "json"; print JSON.load(STDIN)["Reservations"][0]["Instances"][0]["NetworkInterfaces"][0]["NetworkInterfaceId"]' < ${SELF_DESC_FILE})
    /usr/bin/aws ec2 describe-instances --filter "Name=network-interface.addresses.private-ip-address,Values=${OCF_RESKEY_elastic_ip}" > $CURR_DESC_FILE 2>/dev/null
    if [ $? -eq 0 ]; then
        CURR_INST_ID=$(ruby -e 'require "json"; print JSON.load(STDIN)["Reservations"][0]["Instances"][0]["InstanceId"]' < ${CURR_DESC_FILE})
        CURR_IF_ID=$(ruby -e 'require "json"; print JSON.load(STDIN)["Reservations"][0]["Instances"][0]["NetworkInterfaces"][0]["NetworkInterfaceId"]' < ${CURR_DESC_FILE})
        if [ $SELF_INST_ID == $CURR_INST_ID ]; then
            return $OCF_SUCCESS
        fi
    fi
    /usr/bin/aws ec2 unassign-private-ip-addresses --network-interface-id $CURR_IF_ID --private-ip-addresses ${OCF_RESKEY_elastic_ip}
    /usr/bin/aws ec2 assign-private-ip-addresses --network-interface-id $SELF_IF_ID --private-ip-addresses ${OCF_RESKEY_elastic_ip} || return $OCF_NOT_RUNNING

    return $OCF_SUCCESS
}

eip_stop() {
    return $OCF_SUCCESS
}

eip_monitor() {
    curl http://`hostname`:8983/solr/ > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        return $OCF_NOT_RUNNING
    fi

    /usr/bin/aws ec2 describe-instances --filter "Name=tag:hostname,Values=`hostname`" | grep "\"PrivateIpAddress\": \"${OCF_RESKEY_elastic_ip}\"" > /dev/null
    if [ $? -ne 0 ]; then
        return $OCF_NOT_RUNNING
    fi

    return $OCF_SUCCESS
}

eip_validate() {
    return $OCF_SUCCESS
}

case $__OCF_ACTION in
meta-data)	meta_data
		exit $OCF_SUCCESS
		;;
start)		eip_start;;
stop)		eip_stop;;
monitor)	eip_monitor;;
validate-all)   eip_validate;;
usage|help)	eip_usage
		exit $OCF_SUCCESS
		;;
*)		eip_usage
		exit $OCF_ERR_UNIMPLEMENTED
		;;
esac
rc=$?
ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION : $rc"
exit $rc

